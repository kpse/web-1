# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Authentication
GET           /newlogin                                                                        controllers.Auth.newLogin
GET           /login                                                                           controllers.Auth.login
POST          /login                                                                           controllers.Auth.authenticate
GET           /logout                                                                          controllers.Auth.logout
GET           /forgotten                                                                       controllers.Application.forgotten

# Home page
GET           /                                                                                controllers.HomePageController.newHome
GET           /newhome                                                                         controllers.HomePageController.newHome
GET           /software                                                                        controllers.HomePageController.software
GET           /hardware                                                                        controllers.HomePageController.hardware
GET           /becomeAUser                                                                     controllers.HomePageController.becomeUser
GET           /becomeAnAgent                                                                   controllers.HomePageController.becomeAgent
GET           /aboutUs                                                                         controllers.HomePageController.aboutUs
GET           /constructing                                                                    controllers.HomePageController.underConstruction
GET           /newsList                                                                        controllers.HomePageController.newsList
GET           /singleNews/:id                                                                  controllers.HomePageController.singleNews(id: Long)
GET           /admin                                                                           controllers.Application.admin
GET           /operation                                                                       controllers.Application.operation
GET           /agent                                                                           controllers.Application.agent
GET           /download_log                                                                    controllers.Application.downloadLog
GET           /track_logging                                                                   controllers.Application.continuousLogging
GET           /redirect_entry                                                                  controllers.Application.appOpening(user: String, timestamp: Long, goto: String, token: String)

GET           /captcha                                                                         controllers.ReCaptchaController.captchaView

POST          /login.do                                                                        controllers.Authentication.login
POST          /checkphonenum.do                                                                controllers.Authentication.validateNumber
POST          /receiveBindInfo.do                                                              controllers.Authentication.bindNumber
POST          /resetpwd.do                                                                     controllers.Authentication.resetPassword
POST          /changepwd.do                                                                    controllers.Authentication.changePassword
GET           /upgrade                                                                         controllers.Authentication.parentHasUpdate(version: Long)
GET           /teacher_upgrade                                                                 controllers.Authentication.teacherHasUpdate(version: Long)
POST          /employee_login.do                                                               controllers.Authentication.employeeLogin
POST          /employee_resetpwd.do                                                            controllers.Authentication.employeeResetPassword

GET           /kindergarten/:kg                                                                controllers.SchoolSummaryController.show(kg: Long)
GET           /kindergarten/:kg/detail                                                         controllers.SchoolSummaryController.detail(kg: Long)
POST          /kindergarten/:kg                                                                controllers.SchoolSummaryController.update(kg: Long)
DELETE        /kindergarten/:kg                                                                controllers.SchoolSummaryController.delete(kg: Long)
GET           /kindergarten/:kg/preview                                                        controllers.SchoolSummaryController.preview(kg: Long, q: Option[String])
GET           /kindergarten                                                                    controllers.SchoolSummaryController.index(q: Option[String])
POST          /kindergarten                                                                    controllers.SchoolSummaryController.create
GET           /kindergarten/:kg/app_token_test                                                 controllers.Application.testTokenGenerate(kg: Long, user: String, goto: String, timestamp: Option[Long])

GET           /kindergarten/:kg/class                                                          controllers.ClassController.index(kg: Long)
POST          /kindergarten/:kg/class                                                          controllers.ClassController.create(kg: Long)
POST          /kindergarten/:kg/class/:classId                                                 controllers.ClassController.update(kg: Long, classId: Long)
DELETE        /kindergarten/:kg/class/:classId                                                 controllers.ClassController.delete(kg: Long, classId: Long)
DELETE        /kindergarten/:kg/class                                                          controllers.ClassController.removeAll(kg: Long)
GET           /kindergarten/:kg/class/:classId/manager                                         controllers.ClassController.managers(kg: Long, classId: Long)
POST          /kindergarten/:kg/class/:classId/manager                                         controllers.ClassController.createManager(kg: Long, classId: Long)

GET           /kindergarten/:kg/news                                                           controllers.NewsController.index(kg: Long, from: Option[Long], to: Option[Long], most:Option[Int], class_id: Option[String])
GET           /kindergarten/:kg/news/:newsId                                                   controllers.NewsController.show(kg: Long, newsId: Long)
POST          /kindergarten/:kg/news/:newsId                                                   controllers.NewsController.update(kg: Long, newsId: Long)
DELETE        /kindergarten/:kg/news/:newsId                                                   controllers.NewsController.deleteOne(kg: Long, newsId: Long)
GET           /kindergarten/:kg/admin/:adminId/news                                            controllers.NewsController.indexWithNonPublished(kg: Long, adminId: String, class_id: Option[String], restrict: Option[Boolean], from: Option[Long], to: Option[Long], most:Option[Int])
GET           /kindergarten/:kg/admin/:adminId/news/preview                                    controllers.NewsController.previewNonPublished(kg: Long, adminId: String, class_id: Option[String], restrict: Option[Boolean])
POST          /kindergarten/:kg/admin/:adminId/news                                            controllers.NewsController.create(kg: Long, adminId: String)
POST          /kindergarten/:kg/admin/:adminId/news/:newsId                                    controllers.NewsController.adminUpdate(kg: Long, adminId: String, newsId: Long)
DELETE        /kindergarten/:kg/admin/:adminId/news/:newsId                                    controllers.NewsController.delete(kg: Long, adminId: String, newsId: Long)

GET           /kindergarten/:kg/parent                                                         controllers.ParentController.index(kg: Long, class_id: Option[Long], member: Option[Boolean], connected: Option[Boolean])
POST          /kindergarten/:kg/parent                                                         controllers.ParentController.create(kg: Long)
GET           /kindergarten/:kg/parent/:phone                                                  controllers.ParentController.show(kg: Long, phone: String)
POST          /kindergarten/:kg/parent/:phone                                                  controllers.ParentController.update(kg: Long, phone: String)
DELETE        /kindergarten/:kg/parent/:phone                                                  controllers.ParentController.delete(kg: Long, phone: String)

GET           /kindergarten/:kg/parent/:parentId/news                                          controllers.ReadingNewsController.index(kg: Long, parentId: String)
POST          /kindergarten/:kg/parent/:parentId/news/:newsId                                  controllers.ReadingNewsController.create(kg: Long, parentId: Long, newsId: Long)

GET           /kindergarten/:kg/child/:childId/dailylog                                        controllers.DailyLogController.index(kg: Long, childId: String, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /kindergarten/:kg/dailylog                                                       controllers.DailyLogController.indexInClasses(kg: Long, class_id: String)

GET           /kindergarten/:kg/admin/:adminId/news_reading_count/:newsId                      controllers.ReadingNewsController.countReading(kg: Long, adminId: Long, newsId: Long)

GET           /kindergarten/:kg/class/:classId/schedule                                        controllers.ScheduleController.index(kg: Long, classId: Long)
GET           /kindergarten/:kg/class/:classId/schedule/preview                                controllers.ScheduleController.preview(kg: Long, classId: Long)
GET           /kindergarten/:kg/class/:classId/schedule/:scheduleId                            controllers.ScheduleController.show(kg: Long, classId: Long, scheduleId: Long)
POST          /kindergarten/:kg/class/:classId/schedule/:scheduleId                            controllers.ScheduleController.update(kg: Long, classId: Long, scheduleId: Long)
POST          /kindergarten/:kg/class/:classId/schedule                                        controllers.ScheduleController.create(kg: Long, classId: Long)

GET           /kindergarten/:kg/child                                                          controllers.ChildController.indexInSchool(kg: Long, class_id: Option[String], connected: Option[Boolean])
GET           /kindergarten/:kg/child/:childId                                                 controllers.ChildController.showInfo(kg: Long, childId: String)
POST          /kindergarten/:kg/child                                                          controllers.ChildController.createOrUpdate(kg: Long)
POST          /kindergarten/:kg/child/:childId                                                 controllers.ChildController.update2(kg: Long, childId: String)
DELETE        /kindergarten/:kg/child/:childId                                                 controllers.ChildController.delete(kg: Long, childId: String)

GET           /kindergarten/:kg/cookbook                                                       controllers.CookbookController.index(kg: Long)
GET           /kindergarten/:kg/cookbook/preview                                               controllers.CookbookController.preview(kg: Long)
GET           /kindergarten/:kg/cookbook/:cookbookId                                           controllers.CookbookController.show(kg: Long, cookbookId: Long)
POST          /kindergarten/:kg/cookbook/:cookbookId                                           controllers.CookbookController.update(kg: Long, cookbookId: Long)
POST          /kindergarten/:kg/cookbook                                                       controllers.CookbookController.create(kg: Long)


POST          /kindergarten/:kg/check                                                          controllers.PushController.forwardSwipe(kg: Long)
GET           /kindergarten/:kg/card/:cardId                                                   controllers.CheckInController.show(kg: Long, cardId: String)
GET           /kindergarten/:kg/card                                                           controllers.CheckInController.index(kg: Long)

GET           /kindergarten/:kg/relationship                                                   controllers.RelationshipController.index(kg: Long, parent: Option[String], child: Option[String], class_id: Option[Long])
GET           /kindergarten/:kg/relationship/:card                                             controllers.RelationshipController.show(kg: Long, card: String)
POST          /kindergarten/:kg/relationship/:card                                             controllers.RelationshipController.createOrUpdate(kg: Long, card: String)
POST          /kindergarten/:kg/relationship                                                   controllers.RelationshipController.create(kg: Long)
DELETE        /kindergarten/:kg/relationship/:card                                             controllers.RelationshipController.delete(kg: Long, card: String)

GET           /kindergarten/:kg/history/:topicId/record                                        controllers.SessionController.history(kg: Long, topicId: String, from: Option[Long], to: Option[Long], most: Option[Int], month: Option[String])
DELETE        /kindergarten/:kg/history/:topicId/record/:id                                    controllers.SessionController.deleteHistory(kg: Long, topicId: String, id: Long)
POST          /kindergarten/:kg/history/:topicId/record/:id                                    controllers.SessionController.updateHistory(kg: Long, topicId: String, id: Long)
POST          /kindergarten/:kg/history/:topicId/record                                        controllers.SessionController.createHistory(kg: Long, topicId: String, retrieve_recent_from: Option[Long])
GET           /kindergarten/:kg/history/:topicId/statistics                                    controllers.SessionController.statistics(kg: Long, topicId: String, year: String)

POST          /kindergarten/:kg/history                                                        controllers.SessionController.batchCreate(kg: Long, child_id: String)


GET           /kindergarten/:kg/session/:topicId/record                                        controllers.SessionController.index(kg: Long, topicId: String, from: Option[Long], to: Option[Long], most: Option[Int])
DELETE        /kindergarten/:kg/session/:topicId/record/:id                                    controllers.SessionController.delete(kg: Long, topicId: String, id: Long)
POST          /kindergarten/:kg/session/:topicId/record                                        controllers.SessionController.create(kg: Long, topicId: String, retrieve_recent_from: Option[Long])
GET           /kindergarten/:kg/session                                                        controllers.SessionController.indexInClasses(kg: Long, class_id: String)

GET           /kindergarten/:kg/sender/:senderId                                               controllers.SessionController.senderDetail(kg: Long, senderId: String, type: String)

GET           /kindergarten/:kg/session/:topicId/reader/:readerId                              controllers.ReaderController.lastRead(kg: Long, topicId: String, readerId: String)
POST          /kindergarten/:kg/session/:topicId/reader/:readerId                              controllers.ReaderController.markRead(kg: Long, topicId: String, readerId: String)

GET           /kindergarten/:kg/child/:childId/assess                                          controllers.AssessController.index(kg: Long, childId: String, from: Option[Long], to: Option[Long], most: Option[Int])

POST          /kindergarten/:kg/child/:childId/assess                                          controllers.AssessController.createOrUpdate(kg: Long, childId: String)
DELETE        /kindergarten/:kg/child/:childId/assess/:assessId                                controllers.AssessController.delete(kg: Long, childId: String, assessId: Long)
POST          /kindergarten/:kg/assessments                                                    controllers.AssessController.batchCreate(kg: Long)


GET           /kindergarten/:kg/employee                                                       controllers.EmployeeController.indexInSchool(kg: Long, phone: Option[String])
GET           /kindergarten/:kg/employee/:phone                                                controllers.EmployeeController.showInSchool(kg: Long, phone: String)
DELETE        /kindergarten/:kg/employee/:phone                                                controllers.EmployeeController.deleteInSchool(kg: Long, phone: String)
POST          /kindergarten/:kg/employee/:phone                                                controllers.EmployeeController.createOrUpdateInSchool(kg: Long, phone: String)
POST          /kindergarten/:kg/employee/:phone/password                                       controllers.EmployeeController.changePassword(kg: Long, phone: String)

GET           /kindergarten/:kg/employee/:phone/class                                          controllers.EmployeeController.managedClass(kg: Long, phone: String)

POST          /kindergarten/:kg/principal                                                      controllers.EmployeeController.createPrincipal(kg: Long)
GET           /kindergarten/:kg/principal                                                      controllers.PrivilegeController.index(kg: Long)

POST          /kindergarten/:kg/charge                                                         controllers.ChargeController.update(kg: Long)
GET           /kindergarten/:kg/charge                                                         controllers.ChargeController.index(kg: Long)
DELETE        /kindergarten/:kg/charge                                                         controllers.ChargeController.delete(kg: Long)

GET           /kindergarten/:kg/active                                                         controllers.ChargeController.activeCount(kg: Long)

GET           /employee                                                                        controllers.EmployeeController.index
POST          /employee                                                                        controllers.EmployeeController.create
POST          /employee/:phone                                                                 controllers.EmployeeController.updateOrCreate(phone: String)
GET           /employee/:phone                                                                 controllers.EmployeeController.show(phone: String)
DELETE        /employee/:phone                                                                 controllers.EmployeeController.permanentRemove(phone: String)
GET           /employee_password/:phone                                                        controllers.EmployeeController.check(phone: String)
POST          /employee_password/:phone                                                        controllers.EmployeeController.resetPassword(phone: String)

GET           /phone/:phone                                                                    controllers.PhoneManagementController.show(phone: String)
DELETE        /phone/:phone                                                                    controllers.PhoneManagementController.delete(phone: String)

GET           /app_package                                                                     controllers.AppPackageController.last(redirect: Option[String])
POST          /app_package                                                                     controllers.AppPackageController.create
DELETE        /app_package/:packageId                                                          controllers.AppPackageController.delete(packageId: Long)
GET           /app_package/download                                                            controllers.AppPackageController.download
GET           /teacher_app_package/download                                                    controllers.AppPackageController.downloadTeacherClient

POST          /ws/broadcast                                                                    controllers.WSController.sendBroadcastMessage

GET           /ws/fileToken                                                                    controllers.WSController.generateToken(bucket: Option[String], key: Option[String])
GET           /ws/safe_file_token                                                              controllers.WSController.generateEncodeToken(bucket: Option[String], key: Option[String])
POST          /ws/safe_file_token                                                              controllers.WSController.generateSafeToken()
POST          /ws/pfop                                                                         controllers.WSController.pfop()
POST          /ws/notify_prefop                                                                controllers.WSController.pfopNotify(key: String)
GET           /ws/bucket_info/default                                                          controllers.WSController.defaultPostBucket()

GET           /ws/verify/phone                                                                 controllers.SMSController.checkVerificationCode
GET           /ws/verify/phone/:phone                                                          controllers.SMSController.sendVerificationCode(phone: String)
POST          /ws/verify/phone/:phone                                                          controllers.SMSController.verify(phone: String)

POST          /feedback                                                                        controllers.FeedbackController.create
POST          /feedback/:id                                                                    controllers.FeedbackController.update(id: Long)
GET           /feedback                                                                        controllers.FeedbackController.index(source: Option[String])

GET           /cheatCode                                                                       controllers.CheatingController.show
POST          /cheatCode                                                                       controllers.CheatingController.create
DELETE        /cheatCode                                                                       controllers.CheatingController.delete

GET           /api/v1/statistics/session/:schoolId                                             controllers.StatisticsController.countSession(schoolId: Long)
GET           /api/v1/statistics/history/:schoolId                                             controllers.StatisticsController.countGrowingHistory(schoolId: Long)
GET           /api/v1/statistics/dailylog/:schoolId                                            controllers.StatisticsController.countDailyLogHistory(schoolId: Long)
GET           /api/v1/statistics/assess/:schoolId                                              controllers.StatisticsController.countAssessHistory(schoolId: Long, employee_id: Option[String])
GET           /api/v1/statistics/conversation/:schoolId                                        controllers.StatisticsController.countConversationHistory(schoolId: Long, employee_id: Option[String])
GET           /api/v1/statistics/news/:schoolId                                                controllers.StatisticsController.countNewsHistory(schoolId: Long, employee_id: Option[String])

GET           /api/v1/statistics/assess                                                        controllers.StatisticsController.countAllAssess
GET           /api/v1/statistics/conversation                                                  controllers.StatisticsController.countAllConversation
GET           /api/v1/statistics/news                                                          controllers.StatisticsController.countAllNews

GET           /api/v1/logging                                                                  controllers.Application.logging
GET           /api/v1/chat_client                                                              controllers.ChatController.chat(username)

GET           /api/v1/captcha                                                                  controllers.ReCaptchaController.captcha

GET           /api/v1/device                                                                   controllers.MacAddressController.index
GET           /api/v1/device/:device                                                           controllers.MacAddressController.show(device: String)
DELETE        /api/v1/device/:deviceId                                                         controllers.MacAddressController.delete(deviceId: Long)
POST          /api/v1/device                                                                   controllers.MacAddressController.create
POST          /api/v1/device/:device                                                           controllers.MacAddressController.update(device: String)

GET           /api/v1/pc_package                                                               controllers.AppPackageController.lastPCPackage(redirect: Option[String])
GET           /api/v1/teacher_app_package                                                      controllers.AppPackageController.lastTeacherApp(redirect: Option[String])
DELETE        /api/v1/teacher_app_package/:packageId                                           controllers.AppPackageController.delete(packageId: Long)
POST          /api/v1/batch_import/parents                                                     controllers.BatchImportController.parents
POST          /api/v1/batch_import/children                                                    controllers.BatchImportController.children
POST          /api/v1/batch_import/employees                                                   controllers.BatchImportController.employees
POST          /api/v1/batch_import/relationships                                               controllers.BatchImportController.relationships

POST          /api/v1/batch_import/:kg/parents                                                 controllers.BatchImportController.parentsInSchool(kg: Long)
POST          /api/v1/batch_import/:kg/children                                                controllers.BatchImportController.childrenInSchool(kg: Long)
POST          /api/v1/batch_import/:kg/employees                                               controllers.BatchImportController.employeesInSchool(kg: Long)
POST          /api/v1/batch_import/:kg/relationships                                           controllers.BatchImportController.relationshipsInSchool(kg: Long)

POST          /api/v1/batch_delete/parents                                                     controllers.BatchDeleteController.deleteParents

GET           /api/v1/test/force_update                                                        controllers.TestInterfaceController.forceUpdate
POST          /api/v1/binding                                                                  controllers.Authentication.bindNumberV1

POST          /api/v1/phone_check/:phone                                                       controllers.ParentController.isGoodToUse(phone: String, employee: Option[String])
POST          /api/v1/kindergarten/:kg/phone_check/:phone                                      controllers.ParentController.isGoodToUseInSchool(kg: Long, phone: String, employee: Option[String])
POST          /api/v1/card_check                                                               controllers.RelationshipController.isGoodToUse
POST          /api/v1/kindergarten/:kg/login_name_check                                        controllers.EmployeeController.isGoodToUse(kg: Long)
POST          /api/v1/kindergarten/:kg/child_name_check                                        controllers.ChildController.isGoodToUse(kg: Long)

POST          /api/v1/video_provider/:kg                                                       controllers.VideoProviderController.create(kg: Long)
GET           /api/v1/video_provider/:kg                                                       controllers.VideoProviderController.show(kg: Long)
GET           /api/v1/video_provider                                                           controllers.VideoProviderController.index

GET           /api/v1/video_member                                                             controllers.VideoMemberController.externalIndex(token: String)
GET           /api/v1/video_member/available/:kg                                               controllers.VideoMemberController.available(kg: Long)

GET           /api/v1/kindergarten/:kg/video_member/default                                    controllers.VideoMemberController.default(kg: Long)
POST          /api/v1/kindergarten/:kg/video_member/default                                    controllers.VideoMemberController.updateDefaultAccount(kg: Long)
GET           /api/v1/kindergarten/:kg/video_member                                            controllers.VideoMemberController.index(kg: Long)
GET           /api/v1/kindergarten/:kg/video_member/:id                                        controllers.VideoMemberController.show(kg: Long, id: String)
POST          /api/v1/kindergarten/:kg/video_member                                            controllers.VideoMemberController.create(kg: Long)
POST          /api/v1/kindergarten/:kg/video_member/:id                                        controllers.VideoMemberController.update(kg: Long, id: String)
DELETE        /api/v1/kindergarten/:kg/video_member/:id                                        controllers.VideoMemberController.delete(kg: Long, id: String)
GET           /api/v1/kindergarten/:kg/check_video_member                                      controllers.VideoMemberController.check(kg: Long, account: String)

GET           /api/v1/kindergarten/:kg/ad                                                      controllers.ADController.index(kg: Long)
POST          /api/v1/kindergarten/:kg/ad                                                      controllers.ADController.create(kg: Long)
GET           /api/v1/kindergarten/:kg/ad/:id                                                  controllers.ADController.show(kg: Long, id: Long)
POST          /api/v1/kindergarten/:kg/ad/:id                                                  controllers.ADController.update(kg: Long, id: Long)
DELETE        /api/v1/kindergarten/:kg/ad/:id                                                  controllers.ADController.delete(kg: Long, id: Long)

#Location API
GET           /api/v1/kindergarten/:kg/location/:child_id                                      controllers.LocationController.show(kg: Long, child_id: String)

GET           /api/v2/location/:deviceId/record                                                controllers.LocationController.history(deviceId: String, from: Option[String], to: Option[String], most: Option[Int])

GET           /api/v2/location/:deviceId/status/power                                          controllers.LocationController.status(deviceId: String)

#Bus Location API
GET           /api/v2/kindergarten/:kg/bus_driver/:driverId/location                           controllers.V2.BusLocationController.index(kg: Long, driverId: String)
POST          /api/v2/kindergarten/:kg/bus_driver/:driverId/location                           controllers.V2.BusLocationController.create(kg: Long, driverId: String)

GET           /api/v2/kindergarten/:kg/last_bus_location/:childId                              controllers.V2.BusLocationController.childOnBus(kg: Long, childId: String)

POST          /api/v2/kindergarten/:kg/bus_driver/:driverId/check_in                           controllers.V2.BusLocationController.checkIn(kg: Long, driverId: String)
POST          /api/v2/kindergarten/:kg/bus_driver/:driverId/child_off_bus                      controllers.V2.BusLocationController.childOut(kg: Long, driverId: String)
POST          /api/v2/kindergarten/:kg/bus_driver/:driverId/child_on_bus                       controllers.V2.BusLocationController.childIn(kg: Long, driverId: String)
POST          /api/v2/kindergarten/:kg/bus_driver/:driverId/check_out                          controllers.V2.BusLocationController.checkOut(kg: Long, driverId: String)

POST          /api/v2/kindergarten/:kg/bus_driver/:driverId/batch_check_out                    controllers.V2.BusLocationController.batchCheckOut(kg: Long, driverId: String)
POST          /api/v2/kindergarten/:kg/bus_driver/:driverId/batch_check_in                     controllers.V2.BusLocationController.batchCheckIn(kg: Long, driverId: String)
POST          /api/v2/kindergarten/:kg/bus_driver/:driverId/offline_bus_check                  controllers.V2.BusLocationController.offlineBatchImport(kg: Long, driverId: String)

GET           /api/v2/kindergarten/:kg/bus_driver/:driverId/plans                              controllers.V2.ChildrenPlanController.index(kg: Long, driverId: String)
GET           /api/v2/kindergarten/:kg/child/:childId/plan                                     controllers.V2.ChildrenPlanController.show(kg: Long, childId: String)
POST          /api/v2/kindergarten/:kg/child/:childId/plan                                     controllers.V2.ChildrenPlanController.createOrUpdate(kg: Long, childId: String)
DELETE        /api/v2/kindergarten/:kg/child/:childId/plan                                     controllers.V2.ChildrenPlanController.delete(kg: Long, childId: String)
POST          /api/v2/kindergarten/:kg/children_plans                                          controllers.V2.ChildrenPlanController.batch(kg: Long)

POST          /api/v2/kindergarten/:kg/bus                                                     controllers.V2.SchoolBusController.create(kg: Long)
GET           /api/v2/kindergarten/:kg/bus                                                     controllers.V2.SchoolBusController.index(kg: Long)
GET           /api/v2/kindergarten/:kg/bus/:id                                                 controllers.V2.SchoolBusController.show(kg: Long, id: Long)
POST          /api/v2/kindergarten/:kg/bus/:id                                                 controllers.V2.SchoolBusController.update(kg: Long, id: Long)
DELETE        /api/v2/kindergarten/:kg/bus/:id                                                 controllers.V2.SchoolBusController.delete(kg: Long, id: Long)

#Check in history
POST          /api/v2/kindergarten/:kg/check_history                                           controllers.PushController.saveOnly(kg: Long)

#School config
GET           /api/v2/school_config/:kg                                                        controllers.SchoolSummaryController.config(kg: Long)
POST          /api/v2/school_config/:kg                                                        controllers.SchoolSummaryController.addConfig(kg: Long)
POST          /api/v2/kindergarten/:kg/config                                                   controllers.SchoolSummaryController.addPrivateConfig(kg: Long)

GET           /api/v2/relationship/:card                                                       controllers.RelationshipController.search(card: String)
DELETE        /api/v2/relationship/:card                                                       controllers.RelationshipController.permanentRemove(card: String)

POST          /api/v2/admin_password_reset/:phone                                              controllers.Authentication.adminReset(phone: String)

POST          /api/v2/member/:phone                                                            controllers.MemberController.create(phone: String)
DELETE        /api/v2/member/:phone                                                            controllers.MemberController.delete(phone: String)


GET           /api/v2/login_token/:phone                                                       controllers.LoginTokenController.tokenOf(phone: String)

#news read mark
GET           /api/v2/kindergarten/:kg/news/:newsId/reader/:parentId                           controllers.NewsController.oneReader(kg: Long, newsId: Long, parentId: String)
GET           /api/v2/kindergarten/:kg/news/:newsId/reader                                     controllers.NewsController.allReaders(kg: Long, newsId: Long)
POST          /api/v2/kindergarten/:kg/news/:newsId/reader                                     controllers.NewsController.read(kg: Long, newsId: Long)
#news v2
GET           /api/v2/kindergarten/:kg/news                                                    controllers.V2.NewsControllerV2.index(kg: Long, from: Option[Long], to: Option[Long], most:Option[Int], class_id: Option[String], tag: Option[Boolean])
GET           /api/v2/kindergarten/:kg/news_preview                                            controllers.V2.NewsControllerV2.preview(kg: Long, from: Option[Long], to: Option[Long], most:Option[Int], class_id: Option[String], tag: Option[Boolean])
GET           /api/v2/kindergarten/:kg/news/:newsId                                            controllers.V2.NewsControllerV2.show(kg: Long, newsId: Long, tag: Option[Boolean])

DELETE        /api/v2/kindergarten/:kg/admin/:adminId/news/:newsId                             controllers.V2.NewsControllerV2.delete(kg: Long, adminId: String, newsId: Long)
POST          /api/v2/kindergarten/:kg/admin/:adminId/news/:newsId                             controllers.V2.NewsControllerV2.update(kg: Long, adminId: String, newsId: Long)
POST          /api/v2/kindergarten/:kg/admin/:adminId/news                                     controllers.V2.NewsControllerV2.create(kg: Long, adminId: String)
GET           /api/v2/kindergarten/:kg/admin/:adminId/news                                     controllers.V2.NewsControllerV2.indexWithNonPublished(kg: Long, adminId: String, class_id: Option[String], restrict: Option[Boolean], from: Option[Long], to: Option[Long], most:Option[Int])

#removed lists
GET           /api/v2/kindergarten/:kg/removed_parents                                         controllers.V2.RemoveListController.parents(kg: Long)
GET           /api/v2/kindergarten/:kg/removed_employees                                       controllers.V2.RemoveListController.employees(kg: Long)
GET           /api/v2/kindergarten/:kg/removed_children                                        controllers.V2.RemoveListController.children(kg: Long)
GET           /api/v2/kindergarten/:kg/removed_classes                                         controllers.V2.RemoveListController.classes(kg: Long)

#employee session read
GET           /api/v2/kindergarten/:kg/employee/:employeeId/read_session                       controllers.ReaderController.employeeLastRead(kg: Long, employeeId: String)
GET           /api/v2/kindergarten/:kg/employee/:employeeId/session                            controllers.SessionController.lastMessagesOfEmployee(kg: Long, employeeId: String)


#schools pagination
GET           /api/v2/kindergarten                                                             controllers.V2.SchoolController.pagination(q: Option[String], from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v2/kindergarten_preview                                                     controllers.V2.SchoolController.previewIndex(q: Option[String])

#v3 integrate with c# client

GET           /api/v3/kindergarten/:kg/student                                                 controllers.V3.StudentController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int], class_id: Option[String])
GET           /api/v3/kindergarten/:kg/student/:id                                             controllers.V3.StudentController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/student                                                 controllers.V3.StudentController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/student/:id                                             controllers.V3.StudentController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/student/:id                                             controllers.V3.StudentController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/relative                                                controllers.V3.RelativeController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/relative/:id                                            controllers.V3.RelativeController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/relative                                                controllers.V3.RelativeController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/relative/:id                                            controllers.V3.RelativeController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/relative/:id                                            controllers.V3.RelativeController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/employee                                                controllers.V3.EmployeeControllerV3.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/employee/:id                                            controllers.V3.EmployeeControllerV3.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/employee                                                controllers.V3.EmployeeControllerV3.create(kg: Long)
POST          /api/v3/kindergarten/:kg/employee/:id                                            controllers.V3.EmployeeControllerV3.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/employee/:id                                            controllers.V3.EmployeeControllerV3.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/employee/:id/ineligible_class                           controllers.V3.EmployeeControllerV3.ineligibleClasses(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/card                                                    controllers.V3.CardController.search(kg: Long, q: String)
GET           /api/v3/kindergarten/:kg/card/:id                                                controllers.V3.CardController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/card                                                    controllers.V3.CardController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/card/:id                                                controllers.V3.CardController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/card/:id                                                controllers.V3.CardController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/employee_card                                           controllers.V3.EmployeeCardController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/employee_card/:id                                       controllers.V3.EmployeeCardController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/employee_card                                           controllers.V3.EmployeeCardController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/employee_card/:id                                       controllers.V3.EmployeeCardController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/employee_card/:id                                       controllers.V3.EmployeeCardController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/card_check/:card                                        controllers.V3.EmployeeCardController.cardCheck(kg: Long, card: String, id: Option[Long])


GET           /api/v3/kindergarten/:kg/normal_card                                             controllers.V3.CheckingRecordController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/normal_card/:id                                         controllers.V3.CheckingRecordController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/normal_card                                             controllers.V3.CheckingRecordController.create(kg: Long)
DELETE        /api/v3/kindergarten/:kg/normal_card/:id                                         controllers.V3.CheckingRecordController.delete(kg: Long, id: Long)

POST          /api/v3/kindergarten/:kg/notification                                            controllers.V3.CheckingRecordController.push(kg: Long)

GET           /api/v3/kindergarten/:kg/error_card                                              controllers.V3.ErrorCheckingRecordController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/error_card/:id                                          controllers.V3.ErrorCheckingRecordController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/error_card                                              controllers.V3.ErrorCheckingRecordController.create(kg: Long)
DELETE        /api/v3/kindergarten/:kg/error_card/:id                                          controllers.V3.ErrorCheckingRecordController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/work_shift                                              controllers.V3.WorkShiftController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/work_shift/:id                                          controllers.V3.WorkShiftController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/work_shift                                              controllers.V3.WorkShiftController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/work_shift/:id                                          controllers.V3.WorkShiftController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/work_shift/:id                                          controllers.V3.WorkShiftController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/work_shift/:shiftId/user                                controllers.V3.WorkerInShiftController.index(kg: Long, shiftId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/work_shift/:shiftId/user/:id                            controllers.V3.WorkerInShiftController.show(kg: Long, shiftId: Long, id: Long)
POST          /api/v3/kindergarten/:kg/work_shift/:shiftId/user                                controllers.V3.WorkerInShiftController.create(kg: Long, shiftId: Long)
POST          /api/v3/kindergarten/:kg/work_shift/:shiftId/user/:id                            controllers.V3.WorkerInShiftController.update(kg: Long, shiftId: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/work_shift/:shiftId/user/:id                            controllers.V3.WorkerInShiftController.delete(kg: Long, shiftId: Long, id: Long)

GET           /api/v3/kindergarten/:kg/work_shift/:shiftId/date                                controllers.V3.WorkShiftDateController.index(kg: Long, shiftId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/work_shift/:shiftId/date/:id                            controllers.V3.WorkShiftDateController.show(kg: Long, shiftId: Long, id: Long)
POST          /api/v3/kindergarten/:kg/work_shift/:shiftId/date                                controllers.V3.WorkShiftDateController.create(kg: Long, shiftId: Long)
POST          /api/v3/kindergarten/:kg/work_shift/:shiftId/date/:id                            controllers.V3.WorkShiftDateController.update(kg: Long, shiftId: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/work_shift/:shiftId/date/:id                            controllers.V3.WorkShiftDateController.delete(kg: Long, shiftId: Long, id: Long)

GET           /api/v3/kindergarten/:kg/visitor                                                 controllers.V3.VisitorController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/visitor/:id                                             controllers.V3.VisitorController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/visitor                                                 controllers.V3.VisitorController.create(kg: Long)
DELETE        /api/v3/kindergarten/:kg/visitor/:id                                             controllers.V3.VisitorController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/sms                                                     controllers.V3.SmsManagementController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/sms/:id                                                 controllers.V3.SmsManagementController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/sms                                                     controllers.V3.SmsManagementController.create(kg: Long)
DELETE        /api/v3/kindergarten/:kg/sms/:id                                                 controllers.V3.SmsManagementController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/sms_group                                               controllers.V3.SmsGroupManagementController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/sms_group/:id                                           controllers.V3.SmsGroupManagementController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/sms_group                                               controllers.V3.SmsGroupManagementController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/sms_group/:id                                           controllers.V3.SmsGroupManagementController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/sms_group/:id                                           controllers.V3.SmsGroupManagementController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/hardware                                                controllers.V3.HardwareController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/hardware/:id                                            controllers.V3.HardwareController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/hardware                                                controllers.V3.HardwareController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/hardware/:id                                            controllers.V3.HardwareController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/hardware/:id                                            controllers.V3.HardwareController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/camera                                                  controllers.V3.CameraController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/camera/:id                                              controllers.V3.CameraController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/camera                                                  controllers.V3.CameraController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/camera/:id                                              controllers.V3.CameraController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/camera/:id                                              controllers.V3.CameraController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/multi_channel                                           controllers.V3.MultiChannelController.index(kg: Long)
GET           /api/v3/kindergarten/:kg/multi_channel/:id                                       controllers.V3.MultiChannelController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/multi_channel                                           controllers.V3.MultiChannelController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/multi_channel/:id                                       controllers.V3.MultiChannelController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/multi_channel/:id                                       controllers.V3.MultiChannelController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/user_privilege                                          controllers.V3.UserPrivilegeController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/user_privilege/:id                                      controllers.V3.UserPrivilegeController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/user_privilege                                          controllers.V3.UserPrivilegeController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/user_privilege/:id                                      controllers.V3.UserPrivilegeController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/user_privilege/:id                                      controllers.V3.UserPrivilegeController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/immune_record                                           controllers.V3.ImmuneRecordController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/immune_record/:id                                       controllers.V3.ImmuneRecordController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/immune_record                                           controllers.V3.ImmuneRecordController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/immune_record/:id                                       controllers.V3.ImmuneRecordController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/immune_record/:id                                       controllers.V3.ImmuneRecordController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/morning_health_check                                    controllers.V3.MorningHealthCheckController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/morning_health_check/:id                                controllers.V3.MorningHealthCheckController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/morning_health_check                                    controllers.V3.MorningHealthCheckController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/morning_health_check/:id                                controllers.V3.MorningHealthCheckController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/morning_health_check/:id                                controllers.V3.MorningHealthCheckController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/student/:studentId/health_check                         controllers.V3.StudentHealthCheckController.index(kg: Long, studentId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/student/:studentId/health_check/:id                     controllers.V3.StudentHealthCheckController.show(kg: Long, studentId: Long, id: Long)
POST          /api/v3/kindergarten/:kg/student/:studentId/health_check                         controllers.V3.StudentHealthCheckController.create(kg: Long, studentId: Long)
POST          /api/v3/kindergarten/:kg/student/:studentId/health_check/:id                     controllers.V3.StudentHealthCheckController.update(kg: Long, studentId: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/student/:studentId/health_check/:id                     controllers.V3.StudentHealthCheckController.delete(kg: Long, studentId: Long, id: Long)

GET           /api/v3/kindergarten/:kg/financial_project                                       controllers.V3.FinancialProjectController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/financial_project/:id                                   controllers.V3.FinancialProjectController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/financial_project                                       controllers.V3.FinancialProjectController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/financial_project/:id                                   controllers.V3.FinancialProjectController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/financial_project/:id                                   controllers.V3.FinancialProjectController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/financial_project_group                                 controllers.V3.FinancialProjectGroupController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/financial_project_group/:id                             controllers.V3.FinancialProjectGroupController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/financial_project_group                                 controllers.V3.FinancialProjectGroupController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/financial_project_group/:id                             controllers.V3.FinancialProjectGroupController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/financial_project_group/:id                             controllers.V3.FinancialProjectGroupController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/financial_receipt                                       controllers.V3.FinancialReceiptController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/financial_receipt/:id                                   controllers.V3.FinancialReceiptController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/financial_receipt                                       controllers.V3.FinancialReceiptController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/financial_receipt/:id                                   controllers.V3.FinancialReceiptController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/financial_receipt/:id                                   controllers.V3.FinancialReceiptController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/warehouse                                               controllers.V3.WarehouseController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/warehouse/:id                                           controllers.V3.WarehouseController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/warehouse                                               controllers.V3.WarehouseController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/warehouse/:id                                           controllers.V3.WarehouseController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/warehouse/:id                                           controllers.V3.WarehouseController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods_origin                     controllers.V3.WarehouseGoodsOriginController.index(kg: Long, warehouseId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods_origin/:id                 controllers.V3.WarehouseGoodsOriginController.show(kg: Long, warehouseId: Long, id: Long)
POST          /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods_origin                     controllers.V3.WarehouseGoodsOriginController.create(kg: Long, warehouseId: Long)
POST          /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods_origin/:id                 controllers.V3.WarehouseGoodsOriginController.update(kg: Long, warehouseId: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods_origin/:id                 controllers.V3.WarehouseGoodsOriginController.delete(kg: Long, warehouseId: Long, id: Long)

GET           /api/v3/kindergarten/:kg/warehouse/:warehouseId/inventory                        controllers.V3.WarehouseInventoryController.index(kg: Long, warehouseId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/warehouse/:warehouseId/inventory/:id                    controllers.V3.WarehouseInventoryController.show(kg: Long, warehouseId: Long, id: Long)
POST          /api/v3/kindergarten/:kg/warehouse/:warehouseId/inventory                        controllers.V3.WarehouseInventoryController.create(kg: Long, warehouseId: Long)
POST          /api/v3/kindergarten/:kg/warehouse/:warehouseId/inventory/:id                    controllers.V3.WarehouseInventoryController.update(kg: Long, warehouseId: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/warehouse/:warehouseId/inventory/:id                    controllers.V3.WarehouseInventoryController.delete(kg: Long, warehouseId: Long, id: Long)

GET           /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods                            controllers.V3.GoodsController.index(kg: Long, warehouseId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods/:id                        controllers.V3.GoodsController.show(kg: Long, warehouseId: Long, id: Long)
POST          /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods                            controllers.V3.GoodsController.create(kg: Long, warehouseId: Long)
POST          /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods/:id                        controllers.V3.GoodsController.update(kg: Long, warehouseId: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/warehouse/:warehouseId/goods/:id                        controllers.V3.GoodsController.delete(kg: Long, warehouseId: Long, id: Long)

GET           /api/v3/kindergarten/:kg/warehouse/:warehouseId/stocking                         controllers.V3.StockingController.index(kg: Long, warehouseId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/warehouse/:warehouseId/stocking/:id                     controllers.V3.StockingController.show(kg: Long, warehouseId: Long, id: Long)
POST          /api/v3/kindergarten/:kg/warehouse/:warehouseId/stocking                         controllers.V3.StockingController.create(kg: Long, warehouseId: Long)
POST          /api/v3/kindergarten/:kg/warehouse/:warehouseId/stocking/:id                     controllers.V3.StockingController.update(kg: Long, warehouseId: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/warehouse/:warehouseId/stocking/:id                     controllers.V3.StockingController.delete(kg: Long, warehouseId: Long, id: Long)

GET           /api/v3/kindergarten/:kg/diet_nutrition                                          controllers.V3.DietNutritionController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/diet_nutrition/:id                                      controllers.V3.DietNutritionController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/diet_nutrition                                          controllers.V3.DietNutritionController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/diet_nutrition/:id                                      controllers.V3.DietNutritionController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/diet_nutrition/:id                                      controllers.V3.DietNutritionController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/menu                                                    controllers.V3.DietMenuController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/menu/:id                                                controllers.V3.DietMenuController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/menu                                                    controllers.V3.DietMenuController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/menu/:id                                                controllers.V3.DietMenuController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/menu/:id                                                controllers.V3.DietMenuController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/arrangement_group                                       controllers.V3.DietArrangementGroupController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/arrangement_group/:id                                   controllers.V3.DietArrangementGroupController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/arrangement_group                                       controllers.V3.DietArrangementGroupController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/arrangement_group/:id                                   controllers.V3.DietArrangementGroupController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/arrangement_group/:id                                   controllers.V3.DietArrangementGroupController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/arrangement                                             controllers.V3.DietArrangementController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/arrangement/:id                                         controllers.V3.DietArrangementController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/arrangement                                             controllers.V3.DietArrangementController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/arrangement/:id                                         controllers.V3.DietArrangementController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/arrangement/:id                                         controllers.V3.DietArrangementController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/medicine_record                                         controllers.V3.MedicineRecordController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/medicine_record/:id                                     controllers.V3.MedicineRecordController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/medicine_record                                         controllers.V3.MedicineRecordController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/medicine_record/:id                                     controllers.V3.MedicineRecordController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/medicine_record/:id                                     controllers.V3.MedicineRecordController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/internal_notification                                   controllers.V3.NotificationController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/internal_notification/:id                               controllers.V3.NotificationController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/internal_notification                                   controllers.V3.NotificationController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/internal_notification/:id                               controllers.V3.NotificationController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/internal_notification/:id                               controllers.V3.NotificationController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/internal_notification/:nId/feedback                     controllers.V3.NotificationFeedbackController.index(kg: Long, nId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/internal_notification/:nId/feedback/:id                 controllers.V3.NotificationFeedbackController.show(kg: Long, nId: Long, id: Long)
POST          /api/v3/kindergarten/:kg/internal_notification/:nId/feedback                     controllers.V3.NotificationFeedbackController.create(kg: Long, nId: Long)
POST          /api/v3/kindergarten/:kg/internal_notification/:nId/feedback/:id                 controllers.V3.NotificationFeedbackController.update(kg: Long, nId: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/internal_notification/:nId/feedback/:id                 controllers.V3.NotificationFeedbackController.delete(kg: Long, nId: Long, id: Long)

GET           /api/v3/kindergarten/:kg/enumeration                                             controllers.V3.SchoolDataDefinitionController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/enumeration/:id                                         controllers.V3.SchoolDataDefinitionController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/enumeration                                             controllers.V3.SchoolDataDefinitionController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/enumeration/:id                                         controllers.V3.SchoolDataDefinitionController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/enumeration/:id                                         controllers.V3.SchoolDataDefinitionController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/log_store                                               controllers.V3.SchoolLogStoreController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v3/kindergarten/:kg/log_store/:id                                           controllers.V3.SchoolLogStoreController.show(kg: Long, id: Long)
POST          /api/v3/kindergarten/:kg/log_store                                               controllers.V3.SchoolLogStoreController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/log_store/:id                                           controllers.V3.SchoolLogStoreController.update(kg: Long, id: Long)
DELETE        /api/v3/kindergarten/:kg/log_store/:id                                           controllers.V3.SchoolLogStoreController.delete(kg: Long, id: Long)

GET           /api/v3/kindergarten/:kg/class                                                   controllers.V3.ClassController.index(kg: Long)
POST          /api/v3/kindergarten/:kg/class                                                   controllers.V3.ClassController.create(kg: Long)
POST          /api/v3/kindergarten/:kg/class/:id                                               controllers.V3.ClassController.update(kg: Long, id: Long)

#check binding history
GET           /api/v3/binding_history/:phone                                                   controllers.Authentication.bindingHistory(phone: String)

#urls in history records
GET           /api/v3/kindergarten/:kg/history_image                                           controllers.V3.HistoryImagesController.index(kg: Long, from: Long)

POST          /api/v3/kindergarten/:kg/history/:topicId/record/:id/share                       controllers.ShareLinksController.create(kg: Long, topicId: String, id: Long)
GET           /s/:token                                                                        controllers.ShareLinksController.page(token: String)

GET           /api/v3/kindergarten/:kg/employee/:employeeId/history                            controllers.SessionController.historyOfEmployee(kg: Long, employeeId: String, from: Option[Long], to: Option[Long], most: Option[Int], month: Option[String])
GET           /api/v3/kindergarten/:kg/employee/:employeeId/session_history                    controllers.SessionController.sessionHistoryOfEmployee(kg: Long, employeeId: String, from: Option[Long], to: Option[Long], most: Option[Int], month: Option[String])


GET           /api/v3/kindergarten/:kg/relationship                                            controllers.V3.RelationshipV3Controller.search(kg: Long, card: String)

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                                    controllers.VersionedAssets.at(file: controllers.VersionedAsset)
GET           /images/*file                                                                    controllers.Static.at(path="/public/images", file)
GET           /robots.txt                                                                      controllers.Static.at(path="/public", file="robots.txt")

#anglarjs template pages
GET           /templates/*file                                                                 controllers.Static.at(path="/public/templates", file)
GET           /*college/templates/*file                                                        controllers.Static.ignoreCollege(path="/public/templates", file, college)

#weixin api

GET           /api/weixin/entry                                                                controllers.WeiXinController.entry(signature: String, timestamp: Long, nonce: String, echostr: String)
POST          /api/weixin/entry                                                                controllers.WeiXinController.handle

GET           /api/v3/weixin_jsticket                                                          controllers.WeiXinController.ticket()
GET           /api/v3/weixin_signature                                                         controllers.WeiXinController.signature(url: String)

#agent api

GET           /api/v4/agent                                                                    controllers.V4.AgentController.index(from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/agent/:id                                                                controllers.V4.AgentController.show(id: Long)
POST          /api/v4/agent                                                                    controllers.V4.AgentController.create
POST          /api/v4/agent/:id                                                                controllers.V4.AgentController.update(id: Long)
DELETE        /api/v4/agent/:id                                                                controllers.V4.AgentController.delete(id: Long)

GET           /api/v4/agent/:agentId/kindergarten                                              controllers.V4.AgentSchoolController.index(agentId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/agent/:agentId/kindergarten/:id                                          controllers.V4.AgentSchoolController.show(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/kindergarten                                              controllers.V4.AgentSchoolController.create(agentId: Long)
POST          /api/v4/agent/:agentId/kindergarten/:id                                          controllers.V4.AgentSchoolController.update(agentId: Long, id: Long)
DELETE        /api/v4/agent/:agentId/kindergarten/:id                                          controllers.V4.AgentSchoolController.delete(agentId: Long, id: Long)

GET           /api/v4/agent/:agentId/kindergarten/:kg/contractor                               controllers.V4.AgentContractorInSchoolController.index(agentId: Long, kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/agent/:agentId/kindergarten/:kg/contractor/:id                           controllers.V4.AgentContractorInSchoolController.show(agentId: Long, kg: Long, id: Long)
POST          /api/v4/agent/:agentId/kindergarten/:kg/contractor                               controllers.V4.AgentContractorInSchoolController.create(agentId: Long, kg: Long)
POST          /api/v4/agent/:agentId/kindergarten/:kg/contractor/:id                           controllers.V4.AgentContractorInSchoolController.update(agentId: Long, kg: Long, id: Long)
DELETE        /api/v4/agent/:agentId/kindergarten/:kg/contractor/:id                           controllers.V4.AgentContractorInSchoolController.delete(agentId: Long, kg: Long, id: Long)

GET           /api/v4/agent/:agentId/kindergarten/:kg/activity                                 controllers.V4.AgentActivityInSchoolController.index(agentId: Long, kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/agent/:agentId/kindergarten/:kg/activity/:id                             controllers.V4.AgentActivityInSchoolController.show(agentId: Long, kg: Long, id: Long)
POST          /api/v4/agent/:agentId/kindergarten/:kg/activity                                 controllers.V4.AgentActivityInSchoolController.create(agentId: Long, kg: Long)
POST          /api/v4/agent/:agentId/kindergarten/:kg/activity/:id                             controllers.V4.AgentActivityInSchoolController.update(agentId: Long, kg: Long, id: Long)
DELETE        /api/v4/agent/:agentId/kindergarten/:kg/activity/:id                             controllers.V4.AgentActivityInSchoolController.delete(agentId: Long, kg: Long, id: Long)

GET           /api/v4/agent/:agentId/contractor                                                controllers.V4.AgentContractorController.index(agentId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/agent/:agentId/contractor/:id                                            controllers.V4.AgentContractorController.show(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/contractor                                                controllers.V4.AgentContractorController.create(agentId: Long)
POST          /api/v4/agent/:agentId/contractor/:id                                            controllers.V4.AgentContractorController.update(agentId: Long, id: Long)
DELETE        /api/v4/agent/:agentId/contractor/:id                                            controllers.V4.AgentContractorController.delete(agentId: Long, id: Long)

POST          /api/v4/agent/:agentId/contractor/:id/preview                                    controllers.V4.AgentContractorController.preview(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/contractor/:id/publish                                    controllers.V4.AgentContractorController.publish(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/contractor/:id/reject                                     controllers.V4.AgentContractorController.reject(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/contractor/:id/active                                     controllers.V4.AgentContractorController.active(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/contractor/:id/deactive                                   controllers.V4.AgentContractorController.deactive(agentId: Long, id: Long)

GET           /api/v4/agent/:agentId/contractor/:contractorId/activity                         controllers.V4.AgentActivityController.index(agentId: Long, contractorId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/agent/:agentId/contractor/:contractorId/activity/:id                     controllers.V4.AgentActivityController.show(agentId: Long, contractorId: Long, id: Long)
POST          /api/v4/agent/:agentId/contractor/:contractorId/activity                         controllers.V4.AgentActivityController.create(agentId: Long, contractorId: Long)
POST          /api/v4/agent/:agentId/contractor/:contractorId/activity/:id                     controllers.V4.AgentActivityController.update(agentId: Long, contractorId: Long, id: Long)
DELETE        /api/v4/agent/:agentId/contractor/:contractorId/activity/:id                     controllers.V4.AgentActivityController.delete(agentId: Long, contractorId: Long, id: Long)

GET           /api/v4/agent/:agentId/activity                                                  controllers.V4.AgentRawActivityController.index(agentId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/agent/:agentId/activity/:id                                              controllers.V4.AgentRawActivityController.show(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/activity                                                  controllers.V4.AgentRawActivityController.create(agentId: Long)
POST          /api/v4/agent/:agentId/activity/:id                                              controllers.V4.AgentRawActivityController.update(agentId: Long, id: Long)
DELETE        /api/v4/agent/:agentId/activity/:id                                              controllers.V4.AgentRawActivityController.delete(agentId: Long, id: Long)

POST          /api/v4/agent/:agentId/activity/:id/preview                                      controllers.V4.AgentRawActivityController.preview(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/activity/:id/publish                                      controllers.V4.AgentRawActivityController.publish(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/activity/:id/reject                                       controllers.V4.AgentRawActivityController.reject(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/activity/:id/active                                       controllers.V4.AgentRawActivityController.active(agentId: Long, id: Long)
POST          /api/v4/agent/:agentId/activity/:id/deactive                                     controllers.V4.AgentRawActivityController.deactive(agentId: Long, id: Long)


GET           /api/v4/agent/:agentId/activity/:activityId/enrollment                           controllers.V4.AgentActivityEnrollmentController.index(agentId: Long, activityId: Long, from: Option[Long], to: Option[Long], most: Option[Int])

POST          /api/v4/agent/:agentId/contractor/:contractorId/activity/:id/preview             controllers.V4.AgentActivityController.preview(agentId: Long, contractorId: Long, id: Long)
POST          /api/v4/agent/:agentId/contractor/:contractorId/activity/:id/publish             controllers.V4.AgentActivityController.publish(agentId: Long, contractorId: Long, id: Long)
POST          /api/v4/agent/:agentId/contractor/:contractorId/activity/:id/reject              controllers.V4.AgentActivityController.reject(agentId: Long, contractorId: Long, id: Long)

POST          /api/v4/agent/:agentId/password                                                  controllers.V4.AgentController.changePassword(agentId: Long)
POST          /api/v4/agent/:agentId/password_reset                                            controllers.V4.AgentController.resetPassword(agentId: Long)

GET           /api/v4/kindergarten/:kg/commercial_summary                                      controllers.V4.AgentController.summarise(kg: Long)
GET           /api/v4/kindergarten/:kg/contractor                                              controllers.V4.AgentContractorInSchoolController.published(kg: Long, category: Option[Int], from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/kindergarten/:kg/contractor/:contractorId/activity                       controllers.V4.AgentContractorInSchoolController.publishedActivities(kg: Long, contractorId: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/kindergarten/:kg/activity                                                controllers.V4.AgentActivityInSchoolController.published(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])

POST          /api/v4/kindergarten/:kg/activity/:activityId/enrollment                         controllers.V4.AgentActivityEnrollmentController.create(kg: Long, activityId: Long)
GET           /api/v4/kindergarten/:kg/activity/:activityId/parent/:parentId/enrollment        controllers.V4.AgentActivityEnrollmentController.show(kg: Long, activityId: Long, parentId: String)

POST          /api/v4/kindergarten/:kg/employee_check                                          controllers.PushController.employeeCheckInOut(kg: Long)
GET           /api/v4/kindergarten/:kg/employee/:employeeId/dailylog                           controllers.V4.EmployeeDailyLogController.index(kg: Long, employeeId: Long, from: Option[Long], to: Option[Long], most: Option[Int])

#agent statistics
GET           /api/v4/agent/:agentId/statistics                                                controllers.V4.AgentController.stats(agentId: Long)
GET           /api/v4/agent/:agentId/weekly_statistics                                         controllers.V4.AgentController.weeklyStats(agentId: Long)
DELETE        /api/v4/agent/:agentId/statistics/:id                                            controllers.V4.AgentController.deleteStats(agentId: Long, id: Long)

GET           /api/v4/agent/:agentId/kindergarten/:kg/active                                   controllers.V4.AgentSchoolController.schoolData(agentId: Long, kg: Long)
POST          /api/v4/agent_statistics                                                         controllers.V4.AgentController.monthlyStatistics

GET           /api/v4/statistics/monthly/:schoolId                                             controllers.V4.StatisticsController.monthlyCounting(schoolId: Long)
GET           /api/v4/statistics/daily/:schoolId                                               controllers.V4.StatisticsController.dailyCounting(schoolId: Long)
GET           /api/v4/statistics/monthly                                                       controllers.V4.StatisticsController.allSchoolsMonthlyCounting(month: Option[String])
GET           /api/v4/statistics/daily                                                         controllers.V4.StatisticsController.allSchoolsDailyCounting()
GET           /api/v4/statistics/weekly                                                        controllers.V4.StatisticsController.allSchoolsWeeklyCounting()
GET           /api/v4/kindergarten/:kg/statistics                                              controllers.V4.StatisticsController.allMonths(kg: Long)

#v4 cached rerouces
GET           /api/v4/kindergarten/:kg/student                                                 controllers.V4.StudentController.index(kg: Long, from: Option[Long], to: Option[Long], most: Option[Int])
GET           /api/v4/kindergarten/:kg/student/:id                                             controllers.V4.StudentController.show(kg: Long, id: Long)


POST          /api/v5/kindergarten/:schoolId/invitation                                        controllers.V5.InvitationController.create(schoolId: Long)
POST          /api/v5/invitation_code/:phone                                                   controllers.V5.SMSController.send(phone: String)

POST          /api/v6/payment                                                                  controllers.V6.PaymentRecordController.create
GET           /api/v6/payment                                                                  controllers.V6.PaymentRecordController.index(parentId: Option[String])

GET           /api/v7/kindergarten/:kg/im_token/:id                                            controllers.V7.IMServiceController.token(kg: Long, id: Long)
GET           /api/v7/kindergarten/:kg/class_im_group/:classId                                 controllers.V7.IMServiceController.classGroup(kg: Long, classId: Long)
POST          /api/v7/kindergarten/:kg/class_im_group/:classId/user                            controllers.V7.IMServiceController.joinGroup(kg: Long, classId: Long)
DELETE        /api/v7/kindergarten/:kg/class_im_group/:classId/user/:userId                    controllers.V7.IMServiceController.leaveGroup(kg: Long, classId: Long, userId: String)

POST          /api/v7/kindergarten/:kg/school_im_group                                         controllers.V7.IMSchoolServiceController.turnOn(kg: Long)
DELETE        /api/v7/kindergarten/:kg/school_im_group                                         controllers.V7.IMSchoolServiceController.turnOff(kg: Long)

POST          /api/v7/kindergarten/:kg/class_im_group/:class_id/ban                            controllers.V7.IMServiceController.internalBanUser(kg: Long, class_id: Int)
DELETE        /api/v7/kindergarten/:kg/class_im_group/:class_id/ban/:id                        controllers.V7.IMServiceController.internalAllowUser(kg: Long, class_id: Int, id: String)
GET           /api/v7/kindergarten/:kg/class_im_group/:class_id/ban                            controllers.V7.IMServiceController.internalBannedUserList(kg: Long, class_id: Int)

#deprecated
GET           /kindergarten/:kg/parent/:parentId/child                                         controllers.ChildController.index(kg: Long, parentId: String)
GET           /kindergarten/:kg/parent/:parentId/child/:childId                                controllers.ChildController.show(kg: Long, parentId: String, childId: String)

GET           /kindergarten/:kg/conversation/:phone                                            controllers.ConversationController.index(kg: Long, phone: String, from: Option[Long], to: Option[Long], most: Option[Int])
POST          /kindergarten/:kg/conversation/:phone                                            controllers.ConversationController.create(kg: Long, phone: String, retrieve_recent_from: Option[Long])

GET           /ws/swipe                                                                        controllers.WSController.call
POST          /ws/swipe                                                                        controllers.WSController.sendMessage

GET           /kindergarten/:kg/assignment                                                     controllers.AssignmentController.index(kg: Long, class_id: Option[String], from: Option[Long], to: Option[Long], most: Option[Int])
POST          /kindergarten/:kg/assignment                                                     controllers.AssignmentController.create(kg: Long)
POST          /kindergarten/:kg/assignment/:assignmentId                                       controllers.AssignmentController.update(kg: Long, assignmentId: Long)

GET           /api/v1/statistics/assignment/:schoolId                                          controllers.StatisticsController.countAssignmentHistory(schoolId: Long, employee_id: Option[String])
GET           /api/v1/statistics/assignment                                                    controllers.StatisticsController.countAllAssignment